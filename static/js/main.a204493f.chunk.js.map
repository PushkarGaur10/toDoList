{"version":3,"sources":["components/ToDoItem.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","useState","isDone","setIsdone","className","onClick","prevValue","style","textDecoration","text","onChecked","id","App","inputText","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","onChange","event","newValue","target","value","type","map","todoItem","key","ReactDOM","render","document","getElementById"],"mappings":"gOAqBeA,MAnBf,SAAkBC,GAChB,MAAwBC,oBAAS,GAAM,mBAAjCC,EAAM,KAACC,EAAS,KAQtB,OACE,yBAAKC,UAAU,WACb,wBAAIC,QARR,WACEF,GAAU,SAAAG,GACR,OAAQA,MAOPC,MAAO,CAACC,eAAeN,EAAS,eAAiB,SAAUF,EAAMS,MAClE,4BAAQJ,QAAS,WACfL,EAAMU,UAAUV,EAAMW,MACpB,OCuCKC,MArDf,WACE,MAAkCX,mBAAS,IAAG,mBAAvCY,EAAS,KAAEC,EAAY,KAC9B,EAA0Bb,mBAAS,IAAG,mBAA/Bc,EAAK,KAAEC,EAAQ,KActB,SAASC,EAAWN,GAClBK,GAAS,SAACE,GACR,OAAOA,EAAUC,QACf,SAACC,EAAKC,GACJ,OAAOA,IAAUV,QAMzB,OACE,yBAAKP,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOkB,SA5Bb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BZ,EAAaU,IA0BsBG,KAAK,OAAOD,MAAOb,IAClD,4BAAQR,QAxBd,WACEW,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAS,CAAEL,OAExBC,EAAa,MAqBP,uCAGJ,6BACE,4BACGC,EAAMa,KAAI,SAACC,EAASR,GAAK,OACxB,kBAAC,EAAQ,CACPZ,KAAQoB,EACRnB,UAAaO,EACba,IAAKT,EACLV,GAAIU,WC3ClBU,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.a204493f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  const[isDone,setIsdone]=useState(false);\r\n\r\n  function handleClick(){\r\n    setIsdone(prevValue=>{\r\n      return !prevValue;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"listdiv\" >\r\n      <li onClick={handleClick}\r\n       style={{textDecoration:isDone ? \"line-through\" : \"none\"}}>{props.text}</li>\r\n      <button onClick={()=>{\r\n        props.onChecked(props.id);\r\n        }}>X</button>\r\n    </div>\r\n  );\r\n}\r\nexport default ToDoItem;","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  function addItem() {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id){\n    setItems((prevItems)=>{\n      return prevItems.filter(\n        (item,index)=>{\n          return index !== id;\n        }\n      )\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((todoItem,index) => (\n            <ToDoItem \n              text = {todoItem}\n              onChecked = {deleteItem}\n              key={index}\n              id={index}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}